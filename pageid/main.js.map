{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.scss","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.scss","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/search/search.service.ts","webpack:///./src/aws-exports.js","webpack:///./src/environments/environment.ts","webpack:///./src/graphql/queries.ts","webpack:///./src/main.ts","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<app-list></app-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'pageid';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AmplifyAngularModule, AmplifyService } from 'aws-amplify-angular';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { AppComponent } from './app.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport amplify from '../aws-exports';\r\nimport { SearchComponent } from './search/search.component';\r\nAmplify.configure(amplify);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListComponent,\r\n    SearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AmplifyAngularModule,\r\n    InfiniteScrollModule\r\n  ],\r\n  providers: [\r\n    AmplifyService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n\\n<div class=\\\"container\\\" \\n    infiniteScroll \\n    [infiniteScrollDistance]=\\\"2\\\" \\n    [infiniteScrollThrottle]=\\\"50\\\"\\n    (scrolled)=\\\"onScroll()\\\"\\n    [scrollWindow]=\\\"true\\\">\\n\\n  <div>\\n    <app-search class=\\\"fixed-top\\\" (searchListEvent)=\\\"searchListEvent($event)\\\"></app-search>\\n  </div>\\n\\n  <div>\\n    <table class=\\\"table table-striped table-sm\\\">\\n      <thead>\\n        <tr>\\n          <th *ngFor=\\\"let title of tableHeader\\\">\\n            {{title}}\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"pageIdList\\\">\\n        <tr *ngFor=\\\"let item of pageIdList; let i=index\\\">\\n          <td>{{i+1}}</td>\\n          <td>{{item.serviceArea}}</td>\\n          <td>{{item.defType}}</td>\\n          <td>{{item.defId}}</td>\\n          <td>\\n            {{item.defName}}\\n          </td>\\n          <td>\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                <div *ngFor=\\\"let poc of item.defUrl\\\">\\n                  <a target=\\\"_blank\\\" href=\\\"{{poc.urlList}}\\\"><div class=\\\"btn btn-secondary btn-sm\\\">{{poc.pocList}}</div></a>\\n                </div>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div class=\\\"topBtn\\\">\\n      <button class=\\\"btn btn-sm\\\" (click)=\\\"gotoTop()\\\">Top</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".container {\\n  font-size: 0.875rem; }\\n\\napp-search {\\n  padding: 10px 0;\\n  background-color: #fff;\\n  border-bottom: 1px solid #DEE2E6; }\\n\\n.table {\\n  margin-top: 60px; }\\n\\n.table th {\\n  border-top: 0; }\\n\\n.btn-group .btn {\\n  margin-right: 1px; }\\n\\n.topBtn {\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC9DOlxcRGV2XFxnaXRcXHBhZ2VpZC9zcmNcXGFwcFxcbGlzdFxcbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLG9CQUFtQixFQUN0Qjs7QUFFRDtFQUNJLGdCQUFlO0VBQ2YsdUJBQXNCO0VBQ3RCLGlDQUFnQyxFQUNuQzs7QUFDRDtFQUNJLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLGNBQWEsRUFDaEI7O0FBRUQ7RUFDSSxrQkFBaUIsRUFDcEI7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLGFBQVk7RUFDWixZQUFXLEVBQ2QiLCJmaWxlIjoic3JjL2FwcC9saXN0L2xpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcclxufVxyXG5cclxuYXBwLXNlYXJjaCB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNERUUyRTY7XHJcbn1cclxuLnRhYmxlIHtcclxuICAgIG1hcmdpbi10b3A6IDYwcHg7XHJcbn1cclxuXHJcbi50YWJsZSB0aCB7XHJcbiAgICBib3JkZXItdG9wOiAwO1xyXG59XHJcblxyXG4uYnRuLWdyb3VwIC5idG4ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcHg7XHJcbn1cclxuXHJcbi50b3BCdG4ge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiAyMHB4O1xyXG4gICAgcmlnaHQ6IDIwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, HostListener, Inject } from '@angular/core';\r\nimport { List } from './list';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  pageIdList: List[] = [];\r\n  totalList: List[] = [];\r\n  tableHeader = [\r\n    'No',\r\n    'serviceArea',\r\n    'defType',\r\n    'pageID',\r\n    'name',\r\n    'url'\r\n  ];\r\n\r\n  listCount = 20;\r\n  pageList: [];\r\n  ngOnInit() {\r\n  }\r\n\r\n  searchListEvent(result) {\r\n    this.pageIdList = [];\r\n    this.totalList = result;\r\n    this.addListScroll();\r\n  }\r\n\r\n  addListScroll() {\r\n    const tempList: List[] = this.totalList.splice(0, this.listCount);\r\n    this.pageIdList = this.pageIdList.concat(tempList);\r\n  }\r\n\r\n  onScroll() {\r\n    this.addListScroll();\r\n  }\r\n\r\n  gotoTop() {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\"> \\n      <select class=\\\"form-control\\\" name=\\\"\\\" id=\\\"\\\" [ngModel]=\\\"selectedAreaValue\\\" (ngModelChange)=\\\"onChangeArea($event)\\\">\\n        <option value=\\\"\\\">전체</option>\\n        <option *ngFor=\\\"let item of serviceAreaList\\\" value=\\\"{{item}}\\\">\\n          {{item}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <select class=\\\"form-control\\\" name=\\\"\\\" id=\\\"\\\" [ngModel]=\\\"selectedTypeValue\\\" (ngModelChange)=\\\"onChageType($event)\\\">\\n        <option value=\\\"\\\">전체</option>\\n        <option *ngFor=\\\"let item of typeList\\\" value=\\\"{{item}}\\\">\\n            {{item}}\\n          </option>\\n      </select>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" aria-describedby=\\\"helpId\\\" [(ngModel)]=\\\"keyword\\\" (keydown)=\\\"keydownEvent($event)\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-primary \\\" (click)=\\\"search()\\\">검색</button>\\n          </div>\\n        </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { SearchService } from './search.service';\nimport { List } from '../list/list';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  serviceAreaList: string[] = [];\n  typeList: string[] = [];\n\n  @Output() searchListEvent = new EventEmitter();\n\n  pageIdList: List[] = [];\n  searchResultList: List[] = [];\n\n  keyword = '';\n  selectedAreaValue = '';\n  selectedTypeValue = '';\n\n  constructor(\n    private searchService: SearchService\n  ) {\n  }\n\n  ngOnInit() {\n    this.searchService.getListData('').subscribe(dt => {\n      this.pageIdList = dt.data.listPageids.items;\n\n      const objA: object = {};\n      const objB: object = {};\n      this.pageIdList.forEach(item => {\n        if (!objA[item.serviceArea]) {\n          objA[item.serviceArea] = item.serviceArea;\n          this.serviceAreaList.push(item.serviceArea);\n        }\n\n        if (!objB[item.defType]) {\n          objB[item.defType] = item.defType;\n          this.typeList.push(item.defType);\n        }\n      });\n\n      this.search();\n    }, error => {\n      console.log('error : ', error);\n    });\n  }\n\n  search() {\n    this.searchResultList = this.pageIdList.filter(jo => {\n      if ((jo.defId.toLowerCase().includes(this.keyword.toLowerCase())\n          || jo.defName.toLowerCase().includes(this.keyword.toLowerCase()))\n          && jo.defType.includes(this.selectedTypeValue)\n          && jo.serviceArea.includes(this.selectedAreaValue)) {\n        return true;\n      }\n    });\n\n    this.searchListEvent.emit(\n      (!this.keyword && !this.serviceAreaList.length && !this.typeList.length) ?\n        this.pageIdList : this.searchResultList\n    );\n  }\n\n  onChangeArea(areaValue) {\n    this.selectedAreaValue = areaValue;\n    this.search();\n  }\n\n  onChageType(typeValue) {\n    this.selectedTypeValue = typeValue;\n    this.search();\n  }\n\n  keydownEvent(event) {\n    if (event.keyCode === 13) {\n      this.search();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { graphqlOperation } from 'aws-amplify';\nimport { listPageids } from '../../graphql/queries';\nimport { AmplifyService } from 'aws-amplify-angular';\nimport { Observable, from, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  limit = 100;\n  list;\n  nextToken;\n\n  constructor(\n    private amplifyService: AmplifyService\n  ) { }\n\n  public getTest(): string {\n    return 'test!@!!!';\n  }\n\n  public getData(): [] {\n    return null;\n  }\n\n  public getListData(strFilter: string): Observable<any> {\n    let inputFilter = {\n      defName: {\n        contains: strFilter\n      }\n    };\n\n    if (strFilter === '') {\n      inputFilter = null;\n    }\n    return from(this.amplifyService.api().graphql(graphqlOperation(listPageids, {filter: inputFilter, limit: 10000})));\n  }\n\n}\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile =  {\n    \"aws_project_region\": \"ap-northeast-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://h5w47xm7lvco7bwdqqewbyvgq4.appsync-api.ap-northeast-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-1\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-iya2fwj4hvg2ja5wif5ptepj64\"\n};\n\n\nexport default awsmobile;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// tslint:disable\n// this is an auto generated file. This will be overwritten\n\nexport const getPageid = `query GetPageid($defId: String!) {\n  getPageid(defId: $defId) {\n    defId\n    defName\n    defType\n    defUrl {\n      pocList\n      urlList\n    }\n    serviceArea\n  }\n}\n`;\nexport const listPageids = `query ListPageids(\n  $filter: TablePageidFilterInput\n  $limit: Int\n  $nextToken: String\n) {\n  listPageids(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      defId\n      defName\n      defType\n      defUrl {\n        pocList\n        urlList\n      }\n      serviceArea\n    }\n    nextToken\n  }\n}\n`;\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}